{"version":3,"sources":["componets/PhoneBook.js","componets/Contacts.js","Redux/store.js","App.js","index.js"],"names":["PhoneBook","props","filter","name","number","handleSubmit","handleChange","onSubmit","onChange","event","value","type","pattern","title","required","Contacts","contacts","handleDeleteItem","map","contact","onClick","id","addContact","createAction","deleteContact","setFilter","contactsReducer","createReducer","items","state","action","push","payload","store","configureStore","reducer","App","useSelector","dispatch","useDispatch","useState","setName","setNumber","preventDefault","some","alert","uuidv4","currentTarget","toLowerCase","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5fde8f3c.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const PhoneBook = (props) => {\r\n  const { filter, name, number, handleSubmit, handleChange } = props\r\n\r\n  return (\r\n    <div>\r\n      <h1>Phonebook</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <h2>Name</h2>\r\n        <input\r\n          onChange={(event) => handleChange('name', event)}\r\n          value={name}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n        <h2>Number</h2>\r\n        <input\r\n          value={number}\r\n          onChange={(event) => handleChange('number', event)}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n      <h3>Find contacts by name</h3>\r\n      <input\r\n        type=\"text\"\r\n        value={filter}\r\n        onChange={(event) => handleChange('filter', event)}\r\n      />\r\n    </div>\r\n  )\r\n}\r\nPhoneBook.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  handleChange: PropTypes.func.isRequired,\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const Contacts = (props) => {\r\n  const { contacts, handleDeleteItem } = props\r\n  return (\r\n    <div>\r\n      <h1>Contacts</h1>\r\n      <ul>\r\n        {contacts.map((contact) => {\r\n          return (\r\n            <li key={contact.id}>\r\n              {contact.name}: {contact.number}{' '}\r\n              <button\r\n                onClick={() => {\r\n                  handleDeleteItem(contact.id)\r\n                }}\r\n              >\r\n                delete\r\n              </button>\r\n            </li>\r\n          )\r\n        })}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\nContacts.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  handleDeleteItem: PropTypes.func.isRequired,\r\n}\r\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport { createAction, createReducer } from '@reduxjs/toolkit'\r\n\r\nexport const addContact = createAction('ADD_CONTACT')\r\nexport const deleteContact = createAction('DELETE_CONTACT')\r\nexport const setFilter = createAction('SET_FILTER')\r\n\r\nconst contactsReducer = createReducer(\r\n  {\r\n    items: [],\r\n    filter: '',\r\n  },\r\n  {\r\n    [addContact]: (state, action) => {\r\n      state.items.push(action.payload)\r\n    },\r\n    [deleteContact]: (state, action) => {\r\n      return {\r\n        ...state,\r\n        items: state.items.filter((contact) => contact.id !== action.payload),\r\n      }\r\n    },\r\n    [setFilter]: (state, action) => {\r\n      state.filter = action.payload\r\n    },\r\n  },\r\n)\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n})\r\n","import React, { useState } from 'react'\nimport './App.css'\nimport { v4 as uuidv4 } from 'uuid'\nimport { PhoneBook } from './componets/PhoneBook.js'\nimport { Contacts } from './componets/Contacts'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { addContact, deleteContact, setFilter } from './Redux/store'\n\nconst App = () => {\n  const contacts = useSelector((state) => state.contacts.items)\n  const filter = useSelector((state) => state.contacts.filter)\n\n  const dispatch = useDispatch()\n\n  const [name, setName] = useState('')\n  const [number, setNumber] = useState('')\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n\n    if (contacts.some((contact) => contact.name === name)) {\n      alert(`${name} is already in contacts`)\n    } else {\n      setName('')\n      setNumber('')\n      dispatch(addContact({ name, id: uuidv4(), number }))\n    }\n  }\n\n  const handleDeleteItem = (id) => {\n    dispatch(deleteContact(id))\n  }\n\n  const handlChange = (name, event) => {\n    switch (name) {\n      case 'name':\n        setName(event.currentTarget.value)\n        break\n      case 'number':\n        setNumber(event.currentTarget.value)\n        break\n      case 'filter':\n        dispatch(setFilter(event.currentTarget.value))\n        break\n      default:\n        break\n    }\n  }\n\n  const filterContacts = () => {\n    if (filter === '') {\n      return contacts\n    } else {\n      return contacts.filter((contact) => {\n        return contact.name.toLowerCase().includes(filter.toLowerCase())\n      })\n    }\n  }\n\n  return (\n    <div>\n      <PhoneBook\n        filter={filter}\n        name={name}\n        number={number}\n        handleSubmit={handleSubmit}\n        handleChange={handlChange}\n      />\n      <Contacts\n        contacts={filterContacts()}\n        handleDeleteItem={handleDeleteItem}\n      />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { store } from './Redux/store'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}